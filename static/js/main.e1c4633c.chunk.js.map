{"version":3,"sources":["components/Parent.tsx","util/useDebounce.ts","util/restore.ts","components/Test1.tsx","components/Test2.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Parent","props","countRef","useRef","console","log","current","useState","value","setValue","debounceValue","delay","setDebounceValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","setFn","a","className","onClick","store","state","setter","Object","keys","forEach","key","initValue","listeners","Set","useMemo","add","delete","Proxy","get","_target","propKey","e","set","updater","ReactDOM","unstable_batchedUpdates","restore","count","inc","Promise","resolve","getUserInfo","name","age","Test","ref","useRequest","manual","userInfo","data","loading","run","useImperativeHandle","childClick","clickHandle","useBoolean","flag","toggle","event$","useSubscription","memo","forwardRef","Test2","num","setNum","obj","useCreation","Date","now","c","emit","QueryClient","App","inputEl","useEventEmitter","setFlag","Test1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1c4633c.chunk.js","sourcesContent":["import { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useDebounce } from \"../util/useDebounce\";\r\n\r\ninterface IProps {\r\n  [key: string]: unknown;\r\n}\r\n\r\nconst Parent: FC<IProps> = (props) => {\r\n  const countRef = useRef<number>(0);\r\n  console.log(1111, countRef.current);\r\n  const [value, setValue] = useState<string | number>(countRef.current);\r\n  const debounceValue = useDebounce(value, 2000);\r\n  console.log(\"debounceValue\", debounceValue);\r\n  useEffect(() => {\r\n    console.log(\"发送远程请求....\", debounceValue);\r\n  }, [debounceValue]);\r\n\r\n  const setFn = async () => {\r\n    countRef.current++;\r\n    console.log(countRef.current);\r\n    await setValue(countRef.current);\r\n    console.log(\"value\", value);\r\n  };\r\n  return (\r\n    <div className=\"test\">\r\n      <button onClick={setFn}>点击</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Parent;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nexport const useDebounce = <V>(value: V, delay: number) => {\r\n  const [debounceValue, setDebounceValue] = useState(value);\r\n  console.log(\"进入函数\", debounceValue);\r\n  useEffect(() => {\r\n    console.log(2222);\r\n    const timer = setTimeout(() => {\r\n      console.log(3333);\r\n      setDebounceValue(value);\r\n    }, delay);\r\n    return () => {\r\n      console.log(4444);\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n  return debounceValue;\r\n};\r\n","import { useMemo, useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\ndeclare type Store = Record<string, any>;\r\n\r\ninterface IObject {\r\n  [key: string]: any;\r\n}\r\nconst __DEV__ = process.env.NODE_ENV !== \"production\";\r\nconst notObj = (val: unknown) => {\r\n  return Object.prototype.toString.call(val) !== \"[object Object]\";\r\n};\r\nexport function isValidKey<T>(\r\n  key: string | number | symbol,\r\n  object: T\r\n): key is keyof typeof object {\r\n  return key in object;\r\n}\r\nconst restore = <T extends Store>(store: T): T => {\r\n  if (__DEV__ && notObj(store)) throw new Error(\"store should be an object\");\r\n  //存储Render函数，初始化\r\n  const state: IObject = {};\r\n  //存储更新函数\r\n  const setter: IObject = {};\r\n  Object.keys(store).forEach((key) => {\r\n    const initValue = store[key];\r\n    if (typeof initValue !== \"function\") {\r\n      const listeners = new Set();\r\n      setter[key] = listeners;\r\n      //创建初始Render函数\r\n      const Render = () => {\r\n        const [value, setValue] = useState(initValue);\r\n        useMemo(() => {\r\n          listeners.add(setValue);\r\n          return listeners;\r\n        }, []);\r\n\r\n        //组件销毁需要清理数据\r\n        useEffect(() => {\r\n          return () => {\r\n            listeners.delete(setValue);\r\n          };\r\n        }, []);\r\n        return value;\r\n      };\r\n      state[key] = Render;\r\n    }\r\n  });\r\n\r\n  //创建代理对象\r\n  return new Proxy(store, {\r\n    get: function (_target, propKey: string) {\r\n      try {\r\n        return state[propKey]();\r\n      } catch (e) {\r\n        return store[propKey];\r\n      }\r\n    },\r\n    set: function (_target, propKey: string, value: unknown) {\r\n      if (value !== store[propKey]) {\r\n        //更新操作\r\n        const updater = () => {\r\n          //TODO：这里需要再次指明Store类型?\r\n          (store as Store)[propKey] = value;\r\n          setter[propKey].forEach(function (setValue: React.Dispatch<any>) {\r\n            return setValue(value);\r\n          });\r\n        };\r\n        typeof ReactDOM.unstable_batchedUpdates === \"function\"\r\n          ? ReactDOM.unstable_batchedUpdates(updater)\r\n          : updater();\r\n      }\r\n\r\n      return true;\r\n    },\r\n  });\r\n};\r\nexport default restore;\r\n","import { useBoolean, useMount, useRequest } from \"ahooks\";\r\nimport { resolve } from \"dns\";\r\nimport React, { forwardRef, memo, useImperativeHandle } from \"react\";\r\nimport restore from \"../util/restore\";\r\ninterface User {\r\n  name: string;\r\n  age: number;\r\n}\r\nexport const store = restore({\r\n  count: 0,\r\n  inc: () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        store.count++;\r\n        resolve(store.count);\r\n      }, 1000);\r\n    });\r\n  },\r\n  // getList: [] as any,\r\n});\r\nfunction getUserInfo(name: string): Promise<User> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      let data;\r\n      if (name === \"大可\") {\r\n        data = { name: \"小涛\", age: 26 };\r\n      } else {\r\n        data = { name: \"大可\", age: 26 };\r\n      }\r\n      resolve(data);\r\n    }, 1000);\r\n  });\r\n}\r\nexport interface Mychild {\r\n  childClick: () => void;\r\n}\r\nconst Test = (props: any, ref: React.Ref<Mychild>) => {\r\n  const {\r\n    data: userInfo,\r\n    loading,\r\n    run,\r\n  } = useRequest(getUserInfo, {\r\n    manual: true,\r\n  });\r\n  useImperativeHandle(ref, () => ({\r\n    childClick: () => {\r\n      clickHandle();\r\n    },\r\n  }));\r\n  const [flag, { toggle }] = useBoolean(true);\r\n\r\n  props.event$.useSubscription(() => {\r\n    clickHandle();\r\n  });\r\n  const clickHandle = () => {\r\n    let text = flag ? \"大可\" : \"小涛\";\r\n    run(text);\r\n    toggle();\r\n  };\r\n  const { count, inc } = store;\r\n  // useMount(() => {\r\n  //   store.getList.push(run);\r\n  // });\r\n  return (\r\n    <>\r\n      <button onClick={clickHandle}>点击1111</button>\r\n      <button onClick={inc}>addCount{count}</button>\r\n      {/* <button onClick={() => store.getList[0]?.(\"大可\")}>test</button> */}\r\n      {loading ? <div>loading...</div> : <div>Username: {userInfo?.name}</div>}\r\n    </>\r\n  );\r\n};\r\nexport default memo(forwardRef(Test));\r\n","import { useCreation } from \"ahooks\";\r\nimport { useState } from \"react\";\r\nimport { store } from \"./Test1\";\r\ninterface IObject {\r\n  [key: string]: any;\r\n}\r\nconst Test2 = (props: any) => {\r\n  const { count } = store;\r\n  const [num, setNum] = useState(0);\r\n  const obj = useCreation(() => ({} as IObject), []);\r\n  return (\r\n    <div>\r\n      Hello World!!!!{count}\r\n      {num}\r\n      <button\r\n        onClick={() => {\r\n          obj.name = \"dake\" + Date.now();\r\n          setNum((c) => c + 1);\r\n        }}\r\n      >\r\n        加数据啊{num}\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          props.event$.emit();\r\n        }}\r\n      >\r\n        减数据啊{num}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n","import { useEventEmitter } from \"ahooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  useQuery,\n  useQueryClient,\n  QueryClient,\n  QueryClientProvider,\n} from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./App.css\";\nimport Parent from \"./components/Parent\";\nimport QueryUser from \"./components/Test\";\nimport Test1, { Mychild } from \"./components/Test1\";\nimport Test2 from \"./components/Test2\";\nconsole.log(111);\nconst queryClient = new QueryClient();\nfunction App() {\n  console.log(\"aaa\");\n  const inputEl = useRef<Mychild>(null);\n  const event$ = useEventEmitter();\n  const clickChildHandle = () => {\n    setFlag(false);\n    //console.log(inputEl.current);\n    //inputEl.current?.childClick();\n  };\n  const [flag, setFlag] = useState(true);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={clickChildHandle}>点击儿子节点</button>\n        <Parent name=\"大可诶\"></Parent>\n        {/* <QueryClientProvider client={queryClient}>\n          <QueryUser />\n        </QueryClientProvider> */}\n        {flag && <Test1 ref={inputEl} event$={event$}></Test1>}\n        <Test2 event$={event$}></Test2>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}